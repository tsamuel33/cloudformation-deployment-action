name: Test and Deploy CloudFormation Templates
on:
  workflow_call:
    inputs:
      aws_partition:
        description: 'The AWS partition in which the templates will be deployed'
        default: 'aws'
        required: false
        type: string
      job_type:
        description: The type of action being performed on the templates
        required: true
        type: string
      branch_type:
        description: >-
          The type of branch being assessed. Valid values are 'major' (deployment branch)
          or 'minor' (feature branch)
        required: false
        type: string
      github_secret_type:
        description: The type of secret containing the AWS account number (repository, environment, or organization)
        required: false
        type: string
      policy_as_code_provider:
        description: The software used for policy as code validations. Valid values are 'guard' (cfn-guard) or 'opa' (Open Policy Agent)
        required: false
        type: string
      account_secret_name:
        description: Name of the GitHub secret containing the AWS account number
        required: false
        type: string
      environment:
        description: Application environment associated with the target branch
        required: false
        type: string
      assumed_role_name:
        description: Path and name of the AWS IAM role assumed by the pipeline. Formatted as PATH/ROLE_NAME
        required: false
        type: string
      config_file_path:
        description: Path to the config file from the root of your GitHub repository
        required: false
        default: 'config'
        type: string
      deployment_folder_path:
        description: Path to the folder containing deployment artifacts
        required: false
        default: 'deployments'
        type: string
      aws_region:
        description: Main AWS region used to assume IAM role
        required: false
        default: 'us-east-1'
        type: string
      rules_repo:
        description: GitHub repo containing your policy as code rules
        required: false
        default: ''
        type: string
      rules_folder_path:
        description: Path to the folder containing your policy as code rules
        required: false
        default: ''
        type: string
    outputs:
      account_secret_name:
        description: Name of the GitHub secret containing the AWS account number
        value: ${{ jobs.Get_Config_Settings.outputs.account_secret_name }}
      branch_type:
        description: >-
          The type of branch being assessed. Valid values are 'major' (deployment branch)
          or 'minor' (feature branch)
        value: ${{ jobs.Get_Config_Settings.outputs.branch_type }}
      github_secret_type:
        description: The type of secret containing the AWS account number (repository, environment, or organization)
        value: ${{ jobs.Get_Config_Settings.outputs.github_secret_type }}
      policy_as_code_provider:
        description: The software used for policy as code validations. Valid values are 'guard' (cfn-guard) or 'opa' (Open Policy Agent)
        value: ${{ jobs.Get_Config_Settings.outputs.policy_as_code_provider }}
      environment:
        description: Application environment associated with the target branch
        value: ${{ jobs.Get_Config_Settings.outputs.environment }}
      assumed_role_name:
        description: Path and name of the AWS IAM role assumed by the pipeline. Formatted as PATH/ROLE_NAME
        value: ${{ jobs.Get_Config_Settings.outputs.assumed_role_name }}
    secrets:
      ACCOUNT_NUMBER:
        description: ID number of the target AWS account
        required: false

permissions:
  id-token: write
  contents: write

jobs:
  Get_Config_Settings:
    runs-on: ubuntu-latest
    if: inputs.job_type == 'Setup'
    steps:
      - name: Get Config Settings
        id: config
        uses: tsamuel33/cloudformation-deployment-action@feature/local-testing
        with:
          job_type: Setup
          config_file_path: ${{ inputs.config_file_path }}
    outputs:
          branch_type: ${{ steps.config.outputs.branch_type }}
          github_secret_type: ${{ steps.config.outputs.github_secret_type }}
          policy_as_code_provider: ${{ steps.config.outputs.policy_as_code_provider }}
          account_secret_name: ${{ steps.config.outputs.account_secret_name }}
          environment: ${{ steps.config.outputs.environment }}
          assumed_role_name: ${{ steps.config.outputs.assumed_role_name }}
  Perform_Template_Action:
    runs-on: ubuntu-latest
    if: inputs.job_type != 'Setup'
    environment: ${{ inputs.github_secret_type == 'environment' && inputs.environment || null }}
    steps:
      - name: ${{ inputs.job_type }} Templates
        uses: tsamuel33/cloudformation-deployment-action@feature/local-testing
        with:
          job_type: ${{ inputs.job_type }}
          aws_partition: ${{ inputs.aws_partition }}
          branch_type: ${{ inputs.branch_type }}
          github_secret_type: ${{ inputs.github_secret_type }}
          policy_as_code_provider: ${{ inputs.policy_as_code_provider }}
          account_secret_name: ${{ inputs.account_secret_name }}
          environment: ${{ inputs.environment }}
          assumed_role_name: ${{ inputs.assumed_role_name }}
          deployment_folder_path: ${{ inputs.deployment_folder_path }}
          config_file_path: ${{ inputs.config_file_path }}
          aws_account_number: ${{ secrets.ACCOUNT_NUMBER }}
          rules_repo: ${{ inputs.rules_repo }}
          rules_folder_path: ${{ inputs.rules_folder_path }}
          aws_region: ${{ inputs.aws_region }}
  # Lint_Templates:
  #   runs-on: ubuntu-latest
  #   if: inputs.job_type == 'Lint'
  #   steps:
  #     - name: Lint Templates
  #       uses: tsamuel33/cloudformation-deployment-action@feature/local-testing
  #       with:
  #         job_type: Lint
  #         branch_type: ${{ inputs.branch_type }}
  #         github_secret_type: ${{ inputs.github_secret_type }}
  #         policy_as_code_provider: ${{ inputs.policy_as_code_provider }}
  #         account_secret_name: ${{ inputs.account_secret_name }}
  #         environment: ${{ inputs.environment }}
  #         assumed_role_name: ${{ inputs.assumed_role_name }}
  #         config_file_path: ${{ inputs.config_file_path }}
  #         deployment_folder_path: ${{ inputs.deployment_folder_path }}
  # Policy_As_Code_Validation:
  #   runs-on: ubuntu-latest
  #   if: inputs.job_type == 'Validate'
  #   environment: ${{ inputs.github_secret_type == 'environment' && inputs.environment || null }}
  #   steps:
  #     - name: Validate Templates
  #       uses: tsamuel33/cloudformation-deployment-action@feature/local-testing
  #       with:
  #         job_type: Validate
  #         aws_partition: ${{ inputs.aws_partition }}
  #         branch_type: ${{ inputs.branch_type }}
  #         github_secret_type: ${{ inputs.github_secret_type }}
  #         policy_as_code_provider: ${{ inputs.policy_as_code_provider }}
  #         account_secret_name: ${{ inputs.account_secret_name }}
  #         environment: ${{ inputs.environment }}
  #         assumed_role_name: ${{ inputs.assumed_role_name }}
  #         deployment_folder_path: ${{ inputs.deployment_folder_path }}
  #         config_file_path: ${{ inputs.config_file_path }}
  #         aws_account_number: ${{ secrets.ACCOUNT_NUMBER }}
  #         rules_repo: ${{ inputs.rules_repo }}
  #         rules_folder_path: ${{ inputs.rules_folder_path }}
  #         aws_region: ${{ inputs.aws_region }}
  # Deploy:
  #   runs-on: ubuntu-latest
  #   needs: Get_Config_Settings
  #   if: inputs.job_type == 'Deploy'
  #   environment: ${{ inputs.github_secret_type == 'environment' && inputs.environment || null }}
  #   steps:
  #     - name: Deploy
  #       uses: tsamuel33/cloudformation-deployment-action@feature/local-testing
  #       with:
  #         job_type: Deploy
  #         aws_partition: ${{ inputs.aws_partition }}
  #         branch_type: ${{ inputs.branch_type }}
  #         github_secret_type: ${{ inputs.github_secret_type }}
  #         policy_as_code_provider: ${{ inputs.policy_as_code_provider }}
  #         account_secret_name: ${{ inputs.account_secret_name }}
  #         environment: ${{ inputs.environment }}
  #         assumed_role_name: ${{ inputs.assumed_role_name }}
  #         deployment_folder_path: ${{ inputs.deployment_folder_path }}
  #         config_file_path: ${{ inputs.config_file_path }}
  #         aws_account_number: ${{ secrets.ACCOUNT_NUMBER }}
  #         aws_region: ${{ inputs.aws_region }}